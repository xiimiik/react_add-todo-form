{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosList","App","useState","setUserId","setTitle","isUserIdError","setIsUserIdError","isTitleError","setIsTitleError","visibleTodos","setVisibleTodos","action","method","onSubmit","event","preventDefault","trimedTitle","trim","Math","max","curr","prevTodos","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4467f6f.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo button is-link\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', 'message-body', {\n        'TodoInfo--completed is-primary': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title block\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section>\n      <ul className=\"TodoList\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames('message', {\n              'is-primary': todo.completed,\n            })}\n          >\n            <TodoInfo todo={todo} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\nimport 'bulma';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const todosList: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst idGenerator = (todos: Todo[]): number => {\n  return Math.max(...todos.map(curr => curr.id)) + 1;\n};\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isUserIdError, setIsUserIdError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todosList);\n\n  const clearForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const trimedTitle = title.trim();\n\n    const todo = {\n      id: idGenerator(visibleTodos),\n      userId,\n      title,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    if (!trimedTitle) {\n      setIsTitleError(true);\n    }\n\n    if (!userId) {\n      setIsUserIdError(true);\n    }\n\n    if (userId && trimedTitle) {\n      setVisibleTodos(prevTodos => [...prevTodos, todo]);\n      clearForm();\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (isTitleError) {\n      setIsTitleError(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isUserIdError) {\n      setIsUserIdError(false);\n    }\n\n    setUserId(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"App container section\">\n      <h1 className=\"title is-1\">\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"mb-5\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            className=\"input is-primary\"\n            placeholder=\"Enter todo title\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          {isTitleError && (\n            <span className=\"error help is-danger\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelectChange}\n            className=\"select is-primary\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {isUserIdError && (\n            <span className=\"error help is-danger\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-primary\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}